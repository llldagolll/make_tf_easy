{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nexport var CognitoHostedUIIdentityProvider;\n\n(function (CognitoHostedUIIdentityProvider) {\n  CognitoHostedUIIdentityProvider[\"Cognito\"] = \"COGNITO\";\n  CognitoHostedUIIdentityProvider[\"Google\"] = \"Google\";\n  CognitoHostedUIIdentityProvider[\"Facebook\"] = \"Facebook\";\n  CognitoHostedUIIdentityProvider[\"Amazon\"] = \"LoginWithAmazon\";\n  CognitoHostedUIIdentityProvider[\"Apple\"] = \"SignInWithApple\";\n})(CognitoHostedUIIdentityProvider || (CognitoHostedUIIdentityProvider = {}));\n\nexport function isFederatedSignInOptions(obj) {\n  var keys = ['provider'];\n  return obj && !!keys.find(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\nexport function isFederatedSignInOptionsCustom(obj) {\n  var keys = ['customProvider'];\n  return obj && !!keys.find(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\nexport function hasCustomState(obj) {\n  var keys = ['customState'];\n  return obj && !!keys.find(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\nexport function isCognitoHostedOpts(oauth) {\n  return oauth.redirectSignIn !== undefined;\n}\nexport var AuthErrorTypes;\n\n(function (AuthErrorTypes) {\n  AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n  AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n  AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n  AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n  AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n  AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n  AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n  AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n  AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n  AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n  AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n  AuthErrorTypes[\"Default\"] = \"default\";\n  AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n  AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n\nexport function isUsernamePasswordOpts(obj) {\n  return !!obj.username;\n}","map":{"version":3,"sources":["C:\\Users\\owner\\prog\\make_tf_easy\\frontend\\node_modules\\@aws-amplify\\auth\\src\\types\\Auth.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;AA2CH,OAAA,IAAY,+BAAZ;;AAAA,CAAA,UAAY,+BAAZ,EAA2C;AAC1C,EAAA,+BAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,+BAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,+BAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,+BAAA,CAAA,QAAA,CAAA,GAAA,iBAAA;AACA,EAAA,+BAAA,CAAA,OAAA,CAAA,GAAA,iBAAA;AACA,CAND,EAAY,+BAA+B,KAA/B,+BAA+B,GAAA,EAAA,CAA3C;;AAyBA,OAAM,SAAU,wBAAV,CACL,GADK,EACG;AAER,MAAM,IAAI,GAAqC,CAAC,UAAD,CAA/C;AACA,SAAO,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,CAAA,EAAC;AAAI,WAAA,GAAG,CAAC,cAAJ,CAAA,CAAA,CAAA;AAAqB,GAApC,CAAhB;AACA;AAED,OAAM,SAAU,8BAAV,CACL,GADK,EACG;AAER,MAAM,IAAI,GAA2C,CAAC,gBAAD,CAArD;AACA,SAAO,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,CAAA,EAAC;AAAI,WAAA,GAAG,CAAC,cAAJ,CAAA,CAAA,CAAA;AAAqB,GAApC,CAAhB;AACA;AAED,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAAiC;AACtC,MAAM,IAAI,GAGH,CAAC,aAAD,CAHP;AAIA,SAAO,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,CAAA,EAAC;AAAI,WAAA,GAAG,CAAC,cAAJ,CAAA,CAAA,CAAA;AAAqB,GAApC,CAAhB;AACA;AAyCD,OAAM,SAAU,mBAAV,CACL,KADK,EACW;AAEhB,SAA6B,KAAM,CAAC,cAAP,KAA0B,SAAvD;AACA;AA4CD,OAAA,IAAY,cAAZ;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACzB,EAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,mBAAA;AACA,EAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,cAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,cAAA,CAAA,wBAAA,CAAA,GAAA,wBAAA;AACA,EAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,CAfD,EAAY,cAAc,KAAd,cAAc,GAAA,EAAA,CAA1B;;AAiCA,OAAM,SAAU,sBAAV,CAAiC,GAAjC,EAAyC;AAC9C,SAAO,CAAC,CAAE,GAA4B,CAAC,QAAvC;AACA","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tICookieStorageData,\n\tICognitoStorage,\n} from 'amazon-cognito-identity-js';\n\n/**\n * Parameters for user sign up\n */\nexport interface SignUpParams {\n\tusername: string;\n\tpassword: string;\n\tattributes?: object;\n\tvalidationData?: { [key: string]: any };\n\tclientMetadata?: { [key: string]: string };\n}\n\nexport interface AuthCache {\n\tsetItem();\n\tgetItem();\n\tremoveItem();\n}\n\n/**\n * Auth instance options\n */\nexport interface AuthOptions {\n\tuserPoolId?: string;\n\tuserPoolWebClientId?: string;\n\tidentityPoolId?: string;\n\tregion?: string;\n\tmandatorySignIn?: boolean;\n\tcookieStorage?: ICookieStorageData;\n\toauth?: OAuthOpts;\n\trefreshHandlers?: object;\n\tstorage?: ICognitoStorage;\n\tauthenticationFlowType?: string;\n\tidentityPoolRegion?: string;\n\tclientMetadata?: any;\n\tendpoint?: string;\n}\n\nexport enum CognitoHostedUIIdentityProvider {\n\tCognito = 'COGNITO',\n\tGoogle = 'Google',\n\tFacebook = 'Facebook',\n\tAmazon = 'LoginWithAmazon',\n\tApple = 'SignInWithApple',\n}\n\nexport type LegacyProvider =\n\t| 'google'\n\t| 'facebook'\n\t| 'amazon'\n\t| 'developer'\n\t| string;\n\nexport type FederatedSignInOptions = {\n\tprovider: CognitoHostedUIIdentityProvider;\n\tcustomState?: string;\n};\n\nexport type FederatedSignInOptionsCustom = {\n\tcustomProvider: string;\n\tcustomState?: string;\n};\n\nexport function isFederatedSignInOptions(\n\tobj: any\n): obj is FederatedSignInOptions {\n\tconst keys: (keyof FederatedSignInOptions)[] = ['provider'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\nexport function isFederatedSignInOptionsCustom(\n\tobj: any\n): obj is FederatedSignInOptionsCustom {\n\tconst keys: (keyof FederatedSignInOptionsCustom)[] = ['customProvider'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\nexport function hasCustomState(obj: any): boolean {\n\tconst keys: (keyof (\n\t\t| FederatedSignInOptions\n\t\t| FederatedSignInOptionsCustom\n\t))[] = ['customState'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\n/**\n * Details for multi-factor authentication\n */\nexport interface MfaRequiredDetails {\n\tchallengeName: any;\n\tchallengeParameters: any;\n}\n\n/**\n * interface for federatedResponse\n */\nexport interface FederatedResponse {\n\t// access token\n\ttoken: string;\n\t// identity id\n\tidentity_id?: string;\n\t// the universal time when token expired\n\texpires_at: number;\n}\n\n/**\n * interface for federatedUser\n */\nexport interface FederatedUser {\n\tname: string;\n\temail?: string;\n\tpicture?: string;\n}\n\nexport interface AwsCognitoOAuthOpts {\n\tdomain: string;\n\tscope: Array<string>;\n\tredirectSignIn: string;\n\tredirectSignOut: string;\n\tresponseType: string;\n\toptions?: object;\n\turlOpener?: (url: string, redirectUrl: string) => Promise<any>;\n}\n\nexport function isCognitoHostedOpts(\n\toauth: OAuthOpts\n): oauth is AwsCognitoOAuthOpts {\n\treturn (<AwsCognitoOAuthOpts>oauth).redirectSignIn !== undefined;\n}\n\nexport interface Auth0OAuthOpts {\n\tdomain: string;\n\tclientID: string;\n\tscope: string;\n\tredirectUri: string;\n\taudience: string;\n\tresponseType: string;\n\treturnTo: string;\n\turlOpener?: (url: string, redirectUrl: string) => Promise<any>;\n}\n\n// Replacing to fix typings\n// export interface OAuth {\n//     awsCognito?: awsCognitoOAuthOpts,\n//     auth0?: any\n// }\n\nexport type OAuthOpts = AwsCognitoOAuthOpts | Auth0OAuthOpts;\n\nexport interface ConfirmSignUpOptions {\n\tforceAliasCreation?: boolean;\n\tclientMetadata?: ClientMetaData;\n}\n\nexport interface SignOutOpts {\n\tglobal?: boolean;\n}\n\nexport interface CurrentUserOpts {\n\tbypassCache: boolean;\n}\n\nexport interface GetPreferredMFAOpts {\n\tbypassCache: boolean;\n}\n\nexport type UsernamePasswordOpts = {\n\tusername: string;\n\tpassword: string;\n\tvalidationData?: { [key: string]: any };\n};\n\nexport enum AuthErrorTypes {\n\tNoConfig = 'noConfig',\n\tMissingAuthConfig = 'missingAuthConfig',\n\tEmptyUsername = 'emptyUsername',\n\tInvalidUsername = 'invalidUsername',\n\tEmptyPassword = 'emptyPassword',\n\tEmptyCode = 'emptyCode',\n\tSignUpError = 'signUpError',\n\tNoMFA = 'noMFA',\n\tInvalidMFA = 'invalidMFA',\n\tEmptyChallengeResponse = 'emptyChallengeResponse',\n\tNoUserSession = 'noUserSession',\n\tDefault = 'default',\n\tDeviceConfig = 'deviceConfig',\n\tNetworkError = 'networkError',\n}\n\nexport type AuthErrorMessages = { [key in AuthErrorTypes]: AuthErrorMessage };\n\nexport interface AuthErrorMessage {\n\tmessage: string;\n\tlog?: string;\n}\n\n// We can extend this in the future if needed\nexport type SignInOpts = UsernamePasswordOpts;\n\nexport type ClientMetaData =\n\t| {\n\t\t\t[key: string]: string;\n\t  }\n\t| undefined;\n\nexport function isUsernamePasswordOpts(obj: any): obj is UsernamePasswordOpts {\n\treturn !!(obj as UsernamePasswordOpts).username;\n}\n\nexport interface IAuthDevice {\n\tid: string;\n\tname: string;\n}\n"]},"metadata":{},"sourceType":"module"}