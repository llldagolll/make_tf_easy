{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\components\\\\Select.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface Props {\n//     label: string\n//     value: string\n//     options: Array<string>\n//     onChange?: (event: any) => void \n//     className?: string \n// }\nexport const Select = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: props.value,\n      onChange: e => props.onChange(e, props.stateKey),\n      children: props.options.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/components/Select.tsx"],"names":["Select","props","label","value","e","onChange","stateKey","options","map","item","index"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,MAAM,GAAIC,KAAD,IAAgB;AAClC,sBACI;AAAA,4BACI;AAAA,gBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,KAAK,EAAED,KAAK,CAACE,KAArB;AAA4B,MAAA,QAAQ,EAAGC,CAAD,IAAOH,KAAK,CAACI,QAAN,CAAeD,CAAf,EAAkBH,KAAK,CAACK,QAAxB,CAA7C;AAAA,gBACKL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAeC,KAAf,kBACf;AAAA,kBAAqBD;AAArB,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZM;KAAMV,M","sourcesContent":["import {VFC} from 'react'\n\n// interface Props {\n//     label: string\n//     value: string\n//     options: Array<string>\n//     onChange?: (event: any) => void \n//     className?: string \n// }\nexport const Select = (props: any) => {\n    return (\n        <div>\n            <label>{props.label}</label>\n            <select value={props.value} onChange={(e) => props.onChange(e, props.stateKey)}>\n                {props.options.map((item: string, index: number) => (\n                    <option key={index}>{item}</option>\n                ))}\n            </select>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}