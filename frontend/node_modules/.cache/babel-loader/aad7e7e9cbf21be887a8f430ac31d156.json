{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\features\\\\vpc\\\\VpcName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { store } from '../../app/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VpcNameForm = props => {\n  _s();\n\n  const vpcName = useAppSelector(state => state.vpcName.value);\n  const dispatch = useAppDispatch();\n  const [customVpcName, setCustomVpcName] = useState('exampleVpc');\n  const setVpcName = useAppSelector(state => state.vpcName.value);\n  const storeValue = store.getState(); // const handleChange = (e:any) => {\n  //   dispatch(saveVpcName(customVpcName))\n  //   console.log(storeValue)\n  //   console.log(setVpcName)\n  //   e.preventDefault()\n  // }\n\n  const handleChange = e => {\n    console.log(customVpcName);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"VPC NAME:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"exampleVPC\",\n      name: \"customVpcName\",\n      onChange: e => setCustomVpcName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VpcNameForm, \"S0eY2EybFm6dMn3dvyuv3SUZOg0=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = VpcNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VpcNameForm\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/features/vpc/VpcName.tsx"],"names":["React","useState","useAppSelector","useAppDispatch","store","VpcNameForm","props","vpcName","state","value","dispatch","customVpcName","setCustomVpcName","setVpcName","storeValue","getState","handleChange","e","console","log","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAkC,OAAlC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAAsBC,KAAtB,QAAmC,iBAAnC;;AAGA,OAAO,MAAMC,WAAe,GAAIC,KAAD,IAAW;AAAA;;AAExC,QAAMC,OAAO,GAAGL,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAA9B;AACA,QAAMC,QAAqB,GAAGP,cAAc,EAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,YAAD,CAAlD;AAEA,QAAMY,UAAU,GAAGX,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAAjC;AACA,QAAMK,UAAU,GAAGV,KAAK,CAACW,QAAN,EAAnB,CAPwC,CASxC;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AACAM,IAAAA,CAAC,CAACG,cAAF;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,IAAI,EAAC,eAHP;AAIE,MAAA,QAAQ,EAAGH,CAAD,IAAOL,gBAAgB,CAACK,CAAC,CAACI,MAAF,CAASZ,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AACE,MAAA,OAAO,EAAEO,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC,CArCI;;GAAMX,W;UAEKH,c,EACcC,c,EAGXD,c;;;KANRG,W","sourcesContent":["import React, {useState, FC} from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { AppDispatch, store } from '../../app/store';\r\nimport { saveVpcName } from './vpcSlice';\r\n\r\nexport const VpcNameForm: FC = (props) => {\r\n\r\n  const vpcName = useAppSelector((state) => state.vpcName.value)\r\n  const dispatch: AppDispatch = useAppDispatch()\r\n  const [customVpcName, setCustomVpcName] = useState('exampleVpc')\r\n  \r\n  const setVpcName = useAppSelector((state) => state.vpcName.value)\r\n  const storeValue = store.getState()\r\n\r\n  // const handleChange = (e:any) => {\r\n  //   dispatch(saveVpcName(customVpcName))\r\n  //   console.log(storeValue)\r\n  //   console.log(setVpcName)\r\n  //   e.preventDefault()\r\n  // }\r\n  const handleChange = (e:any) => {\r\n    console.log(customVpcName)\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        VPC NAME:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='exampleVPC'\r\n        name=\"customVpcName\"\r\n        onChange={(e) => setCustomVpcName(e.target.value)}\r\n      />\r\n      <button\r\n        onClick={handleChange}>\r\n        設定\r\n        </button>\r\n    </form>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}