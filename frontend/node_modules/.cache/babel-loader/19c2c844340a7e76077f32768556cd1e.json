{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\pages\\\\TerraformFile.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MakeTerraformFile = props => {\n  // const setVpcName = useAppSelector((state) => state.vpcName.value)\n  // const storeValue = store.getState()\n  console.log(props.key);\n  const setVpcName = localStorage.getItem('vpcName');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello, world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: setVpcName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"\\u623B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = MakeTerraformFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeTerraformFile\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/pages/TerraformFile.tsx"],"names":["React","MakeTerraformFile","props","console","log","key","setVpcName","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;;;AAIA,OAAO,MAAMC,iBAAqB,GAAIC,KAAD,IAAW;AAC9C;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB;AACA,QAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnB;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOC,CAZI;KAAML,iB","sourcesContent":["import React, {useState, FC} from 'react'\r\nimport { useAppSelector } from '../app/hooks';\r\nimport { store } from '../app/store';\r\n  \r\nexport const MakeTerraformFile: FC = (props) => {\r\n  // const setVpcName = useAppSelector((state) => state.vpcName.value)\r\n  // const storeValue = store.getState()\r\n  console.log(props.key)\r\n  const setVpcName = localStorage.getItem('vpcName')\r\n  return (\r\n    <>\r\n      <p>Hello, world</p>\r\n      <p>{ setVpcName }</p>\r\n      <a href=\"/\">戻る</a>\r\n    </>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}