{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore'; // ! We have to use this exact reference, since it gets mutated with Amplify.Auth\n\nimport { Amplify } from './index';\nvar requiredModules = [// API cannot function without Auth\nAuth, // Auth cannot function without Credentials\nCredentials]; // These modules have been tested with SSR\n\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n  if (context === void 0) {\n    context = {};\n  }\n\n  var _a = context.modules,\n      modules = _a === void 0 ? defaultModules : _a,\n      req = context.req;\n  var previousConfig = Amplify.configure();\n  var amplify = new AmplifyClass();\n  var storage = new UniversalStorage({\n    req: req\n  });\n  requiredModules.forEach(function (m) {\n    if (!modules.includes(m)) {\n      // @ts-ignore This expression is not constructable.\n      // Type 'Function' has no construct signatures.ts(2351)\n      amplify.register(new m.constructor());\n    }\n  }); // Associate new module instances with this amplify\n\n  modules.forEach(function (m) {\n    amplify.register(new m.constructor());\n  }); // Configure new Amplify instances with previous configuration\n\n  amplify.configure(__assign(__assign({}, previousConfig), {\n    storage: storage\n  }));\n  return amplify;\n}","map":{"version":3,"sources":["C:\\Users\\owner\\prog\\make_tf_easy\\frontend\\node_modules\\aws-amplify\\src\\withSSRContext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,GAAP,MAAgB,kBAAhB;AACA,SAAS,IAAT,QAAqB,mBAArB;AACA,SAAS,YAAT,EAAuB,WAAvB,EAAoC,gBAApC,QAA4D,mBAA5D;AACA,SAAS,SAAT,QAA0B,wBAA1B,C,CAEA;;AACA,SAAS,OAAT,QAAwB,SAAxB;AAEA,IAAM,eAAe,GAAG,CACvB;AACA,IAFuB,EAGvB;AACA,WAJuB,CAAxB,C,CAOA;;AACA,IAAM,cAAc,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,SAAZ,CAAvB;AAOA,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAA8C;AAArB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAqB;;AAC3C,MAAA,EAAA,GAAA,OAAA,CAAA,OAAA;AAAA,MAAA,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAA,EAAA;AAAA,MAA0B,GAAA,GAAA,OAAA,CAAA,GAA1B;AACR,MAAM,cAAc,GAAG,OAAO,CAAC,SAAR,EAAvB;AACA,MAAM,OAAO,GAAG,IAAI,YAAJ,EAAhB;AACA,MAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB;AAAE,IAAA,GAAG,EAAA;AAAL,GAArB,CAAhB;AAEA,EAAA,eAAe,CAAC,OAAhB,CAAwB,UAAA,CAAA,EAAC;AACxB,QAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,CAAjB,CAAL,EAA0B;AACzB;AACA;AACA,MAAA,OAAO,CAAC,QAAR,CAAiB,IAAI,CAAC,CAAC,WAAN,EAAjB;AACA;AACD,GAND,EANmD,CAcnD;;AACA,EAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,CAAA,EAAC;AAChB,IAAA,OAAO,CAAC,QAAR,CAAiB,IAAI,CAAC,CAAC,WAAN,EAAjB;AACA,GAFD,EAfmD,CAmBnD;;AACA,EAAA,OAAO,CAAC,SAAR,CAAiB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,cAAN,CAAA,EAAoB;AAAE,IAAA,OAAO,EAAA;AAAT,GAApB,CAAjB;AAEA,SAAO,OAAP;AACA","sourcesContent":["import API from '@aws-amplify/api';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore';\n\n// ! We have to use this exact reference, since it gets mutated with Amplify.Auth\nimport { Amplify } from './index';\n\nconst requiredModules = [\n\t// API cannot function without Auth\n\tAuth,\n\t// Auth cannot function without Credentials\n\tCredentials,\n];\n\n// These modules have been tested with SSR\nconst defaultModules = [API, Auth, DataStore];\n\ntype Context = {\n\treq?: any;\n\tmodules?: any[];\n};\n\nexport function withSSRContext(context: Context = {}) {\n\tconst { modules = defaultModules, req } = context;\n\tconst previousConfig = Amplify.configure();\n\tconst amplify = new AmplifyClass();\n\tconst storage = new UniversalStorage({ req });\n\n\trequiredModules.forEach(m => {\n\t\tif (!modules.includes(m)) {\n\t\t\t// @ts-ignore This expression is not constructable.\n\t\t\t// Type 'Function' has no construct signatures.ts(2351)\n\t\t\tamplify.register(new m.constructor());\n\t\t}\n\t});\n\n\t// Associate new module instances with this amplify\n\tmodules.forEach(m => {\n\t\tamplify.register(new m.constructor());\n\t});\n\n\t// Configure new Amplify instances with previous configuration\n\tamplify.configure({ ...previousConfig, storage });\n\n\treturn amplify;\n}\n"]},"metadata":{},"sourceType":"module"}