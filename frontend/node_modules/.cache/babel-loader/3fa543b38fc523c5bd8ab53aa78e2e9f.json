{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\features\\\\Subnet\\\\PublicIpOnLaunch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PublicIpForm = props => {\n  _s();\n\n  const [state, setState] = useState({\n    value: \"\"\n  });\n  const choices = [\"true\", \"false\"];\n\n  const handleChange = event => {\n    setState({\n      value: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"py-4\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u30D1\\u30D6\\u30EA\\u30C3\\u30AFIP\\u30A2\\u30C9\\u30EC\\u30B9:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: state.value,\n        onChange: handleChange,\n        children: choices.map(selection => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: selection\n        }, selection, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PublicIpForm, \"sFbUuptITjiV6+arPixVDLFZbRc=\");\n\n_c = PublicIpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicIpForm\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/features/Subnet/PublicIpOnLaunch.tsx"],"names":["React","useState","PublicIpForm","props","state","setState","value","choices","handleChange","event","target","map","selection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,YAAgB,GAAKC,KAAF,IAAa;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAlC;AACA,QAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAe;AAClCJ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,KAAK,EAAEG,KAAK,CAACC,MAAN,CAAaJ;AAArB,KAAD,CAAR;AACD,GAFD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,2BACE;AAAA,2FAEE;AAAQ,QAAA,KAAK,EAAEF,KAAK,CAACE,KAArB;AAA4B,QAAA,QAAQ,EAAEE,YAAtC;AAAA,kBACGD,OAAO,CAACI,GAAR,CAAaC,SAAD,iBACX;AAAA,oBAAyBA;AAAzB,WAAaA,SAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBM;;GAAMV,Y;;KAAAA,Y","sourcesContent":["import React, {useState, FC} from 'react'\r\n\r\nexport const PublicIpForm: FC = ( props ) => {\r\n  const [state, setState] = useState({value: \"\"})\r\n  const choices = [\"true\", \"false\"] \r\n  const handleChange = (event:any) => {\r\n    setState({value: event.target.value})\r\n  }\r\n\r\n\r\n  return (\r\n    <form className=\"py-4\">\r\n      <label>\r\n        パブリックIPアドレス: \r\n        <select value={state.value} onChange={handleChange} >\r\n          {choices.map((selection) =>\r\n            <option key={selection}>{selection}</option>\r\n          )}\r\n        </select>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}