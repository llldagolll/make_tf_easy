{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\frontend\\\\src\\\\templates\\\\Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { FormControl } from '../components/FormControl';\nimport { Select } from '../components/Select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const azList = [\"ap-northeast-1a\", \"ap-northeast-1c\", \"ap-northeast-1d\"];\n  const isPublicIp = [\"true\", \"false\"];\n  const [vpcData, setVpcData] = useState({\n    name: \"\",\n    cidrBlock: \"\"\n  });\n  const [subnetData, setSubnetData] = useState({\n    cidrBlock: \"\",\n    availabilityZone: \"\",\n    isPublicIp: \"\"\n  });\n\n  const handleChangeVpc = (e, key) => {\n    e.preventDefault();\n    setVpcData({ ...vpcData,\n      [key]: e.target.value\n    });\n  };\n\n  const handleChangeSubnet = (e, key) => {\n    e.preventDefault();\n    setSubnetData({ ...subnetData,\n      [key]: e.target.value\n    });\n  };\n\n  const handleSaveData = () => {\n    const vpcDataForLocalStorage = JSON.stringify(vpcData);\n    const subnetDataForLocalStorage = JSON.stringify(subnetData);\n    localStorage.setItem('vpc', vpcDataForLocalStorage);\n    localStorage.setItem('subnet', subnetDataForLocalStorage);\n  };\n\n  const convertObjData = () => {\n    const vpcData = localStorage.getItem('vpc');\n    const subnetData = localStorage.getItem('subnet');\n    const objVpcData = JSON.parse(vpcData);\n    const objSubnetData = JSON.parse(subnetData);\n    return [objVpcData, objSubnetData];\n  }; // const makeTextFile = () => {\n  //     const [objVpcData, objSubnetData] = convertObjData();\n  //     const string = \"ダウンロードできたかな？\"\n  //     const title = 'testfile.tf';\n  //     const blobType = 'text/plain';\n  //     const linkTagId = 'getLocal';\n  //     const linkTag = document.getElementById(linkTagId);\n  //     const linkTagAttr = ['href', 'download'];\n  //     const msSave = window.navigator;\n  //     const stringObject = new Blob([string], { type: blobType });\n  //     const objectURL = window.URL.createObjectURL(stringObject)\n  //     linkTag?.setAttribute(linkTagAttr[0], objectURL)\n  //     linkTag?.setAttribute(linkTagAttr[1], title)\n  // }\n  // const testAxios = () => {\n  //     axios\n  //     .get('http://localhost:5000/tf/postAllData')             //リクエストを飛ばすpath\n  //     .then(response => {\n  //         console.log(response.data);\n  //     })                               //成功した場合、postsを更新する（then）\n  //     .catch(() => {\n  //         console.log('通信に失敗しました');\n  //     });               \n  // }\n\n\n  const sendAllData = () => {\n    const [objVpcData, objSubnetData] = convertObjData();\n    axios.post('http://localhost:5000/tf/postAllData', {\n      withCredentials: true,\n      vpc: objVpcData,\n      subnet: objSubnetData\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const consoleTestFile = () => {\n    axios.get('http://localhost:5000/tf/testMakeFile') //リクエストを飛ばすpath\n    .then(response => {\n      console.log(response.data);\n    }) //成功した場合、postsを更新する（then）\n    .catch(() => {\n      console.log('通信に失敗しました');\n    });\n  };\n\n  const consoleTf = () => {\n    const [objVpcData, objSubnetData] = convertObjData();\n    axios.post('http://localhost:5000/tf/consoleTf', {\n      withCredentials: true,\n      vpc: objVpcData,\n      subnet: objSubnetData\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const MakeTestFile = e => {\n    e.preventDefault();\n    const [objVpcData, objSubnetData] = convertObjData();\n    axios.post('http://localhost:5000/tf/MakeTestFile', {\n      withCredentials: true,\n      vpc: objVpcData,\n      subnet: objSubnetData\n    }).then(function (response) {\n      console.log(typeof response.data);\n      makeFile(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const makeFile = terraformText => {\n    const title = 'main.tf';\n    const blobType = 'text/plain';\n    const linkTagId = 'getLocal';\n    const linkTag = document.getElementById(linkTagId);\n    const linkTagAttr = ['href', 'download']; // const string = \"hello\"\n\n    const msSave = window.navigator;\n    const stringObject = new Blob([terraformText], {\n      type: blobType\n    });\n    const objectURL = window.URL.createObjectURL(stringObject);\n    linkTag === null || linkTag === void 0 ? void 0 : linkTag.setAttribute(linkTagAttr[0], objectURL);\n    linkTag === null || linkTag === void 0 ? void 0 : linkTag.setAttribute(linkTagAttr[1], title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"VPC\\u306E\\u8A2D\\u5B9A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          stateKey: \"cidrBlock\",\n          value: vpcData.cidrBlock,\n          label: \"CIDR BLOCK:\",\n          placeholder: \"10.0.0.0/16\",\n          name: \"cidrBlock\",\n          className: \"formControl\",\n          onChange: handleChangeVpc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          stateKey: \"name\",\n          value: vpcData.name,\n          label: \"VPC NAME:\",\n          placeholder: \"exampleVPC\",\n          name: \"yourVpcName\",\n          onChange: handleChangeVpc,\n          className: \"formControl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Subnet\\u306E\\u8A2D\\u5B9A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          stateKey: \"cidrBlock\",\n          value: subnetData.cidrBlock,\n          label: \"CIDR BLOCK:\",\n          placeholder: \"10.0.0.0/24\",\n          name: \"cidrBlock\",\n          className: \"formControl\",\n          onChange: handleChangeSubnet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          stateKey: \"availabilityZone\",\n          label: \"AvailabilityZone:\",\n          options: azList,\n          value: subnetData.availabilityZone,\n          onChange: handleChangeSubnet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          stateKey: \"isPublicIp\",\n          label: \"PublicIpOnLaunch:\",\n          options: isPublicIp,\n          value: subnetData.isPublicIp,\n          onChange: handleChangeSubnet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendAllData,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: consoleTestFile,\n        children: \"testMakeFile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: consoleTf,\n        children: \"consoleTf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: MakeTestFile,\n        children: \"MakeTestFile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        id: \"getLocal\",\n        onClick: MakeTestFile,\n        children: \"\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"rKe4Zh//4TgUvYc7MCc0RMiS4IQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/frontend/src/templates/Home.tsx"],"names":["useState","FormControl","Select","axios","Home","azList","isPublicIp","vpcData","setVpcData","name","cidrBlock","subnetData","setSubnetData","availabilityZone","handleChangeVpc","e","key","preventDefault","target","value","handleChangeSubnet","handleSaveData","vpcDataForLocalStorage","JSON","stringify","subnetDataForLocalStorage","localStorage","setItem","convertObjData","getItem","objVpcData","parse","objSubnetData","sendAllData","post","withCredentials","vpc","subnet","then","response","console","log","catch","error","consoleTestFile","get","data","consoleTf","MakeTestFile","makeFile","terraformText","title","blobType","linkTagId","linkTag","document","getElementById","linkTagAttr","msSave","window","navigator","stringObject","Blob","type","objectURL","URL","createObjectURL","setAttribute"],"mappings":"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","sourcesContent":["import {VFC, useState} from 'react'\nimport { FormControl } from '../components/FormControl'\nimport { Select } from '../components/Select'\nimport { Subnet, Vpc } from '../types/types'\nimport { json } from 'express'\nimport axios from 'axios'\n\nexport const Home: VFC = () => {\n    const azList = [\"ap-northeast-1a\", \"ap-northeast-1c\", \"ap-northeast-1d\"] \n    const isPublicIp = [\"true\", \"false\"]\n\n\n    const [vpcData, setVpcData] = useState<Vpc>({\n        name: \"\",\n        cidrBlock: \"\"\n    })\n\n    const [subnetData, setSubnetData] = useState<Subnet>({\n        cidrBlock: \"\",\n        availabilityZone: \"\",\n        isPublicIp: \"\"\n    })\n\n    const handleChangeVpc = (e: any, key: string) => {\n        e.preventDefault()\n        setVpcData({\n            ...vpcData,\n            [key]: e.target.value\n        })\n    }\n\n    const handleChangeSubnet = (e: any, key: string) => {\n        e.preventDefault()\n        setSubnetData({\n            ...subnetData,\n            [key]: e.target.value\n        })\n    }\n\n    const handleSaveData = () => {\n        const vpcDataForLocalStorage = JSON.stringify(vpcData)\n        const subnetDataForLocalStorage = JSON.stringify(subnetData)\n\n        localStorage.setItem('vpc', vpcDataForLocalStorage)\n        localStorage.setItem('subnet', subnetDataForLocalStorage)\n    }\n\n    const convertObjData = ():Array<Object> => {\n        const vpcData = localStorage.getItem('vpc');\n        const subnetData = localStorage.getItem('subnet');\n        const objVpcData:any  = JSON.parse(vpcData!)\n        const objSubnetData:any  = JSON.parse(subnetData!)\n\n        return [objVpcData, objSubnetData]\n    }\n\n    // const makeTextFile = () => {\n    //     const [objVpcData, objSubnetData] = convertObjData();\n\n    //     const string = \"ダウンロードできたかな？\"\n\n    //     const title = 'testfile.tf';\n    //     const blobType = 'text/plain';\n\n    //     const linkTagId = 'getLocal';\n    //     const linkTag = document.getElementById(linkTagId);\n    //     const linkTagAttr = ['href', 'download'];\n\n    //     const msSave = window.navigator;\n\n    //     const stringObject = new Blob([string], { type: blobType });\n    //     const objectURL = window.URL.createObjectURL(stringObject)\n\n    //     linkTag?.setAttribute(linkTagAttr[0], objectURL)\n    //     linkTag?.setAttribute(linkTagAttr[1], title)\n    // }\n\n    // const testAxios = () => {\n    //     axios\n    //     .get('http://localhost:5000/tf/postAllData')             //リクエストを飛ばすpath\n    //     .then(response => {\n    //         console.log(response.data);\n    //     })                               //成功した場合、postsを更新する（then）\n    //     .catch(() => {\n    //         console.log('通信に失敗しました');\n    //     });               \n    // }\n\n    const sendAllData = () => {\n        const [objVpcData, objSubnetData] = convertObjData();\n        axios.post('http://localhost:5000/tf/postAllData', {\n            withCredentials: true,\n            vpc: objVpcData,\n            subnet: objSubnetData\n            })\n            .then(function (response) {\n            console.log(response);\n            })\n            .catch(function (error) {\n            console.log(error);\n            });\n    }\n\n    const consoleTestFile = () => {\n        axios\n        .get('http://localhost:5000/tf/testMakeFile')             //リクエストを飛ばすpath\n        .then(response => {\n            console.log(response.data);\n        })                               //成功した場合、postsを更新する（then）\n        .catch(() => {\n            console.log('通信に失敗しました');\n        });               \n    }\n\n    const consoleTf = () => {\n        const [objVpcData, objSubnetData] = convertObjData();\n        axios.post('http://localhost:5000/tf/consoleTf', {\n            withCredentials: true,\n            vpc: objVpcData,\n            subnet: objSubnetData\n            })\n            .then(function (response) {\n            console.log(response);\n            })\n            .catch(function (error) {\n            console.log(error);\n            });\n    }\n\n\n\n    const MakeTestFile = (e: any) => {\n        e.preventDefault()\n        const [objVpcData, objSubnetData] = convertObjData();\n        axios.post('http://localhost:5000/tf/MakeTestFile', {\n            withCredentials: true,\n            vpc: objVpcData,\n            subnet: objSubnetData\n            })\n            .then(function (response: any) {\n                console.log(typeof(response.data));\n                makeFile(response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n\n    const makeFile = (terraformText: string) => {\n        const title = 'main.tf';\n        const blobType = 'text/plain';\n\n        const linkTagId = 'getLocal';\n        const linkTag = document.getElementById(linkTagId);\n        const linkTagAttr = ['href', 'download'];\n\n        // const string = \"hello\"\n\n        const msSave = window.navigator;\n\n        const stringObject = new Blob([terraformText], { type: blobType });\n        const objectURL = window.URL.createObjectURL(stringObject)\n\n        linkTag?.setAttribute(linkTagAttr[0], objectURL)\n        linkTag?.setAttribute(linkTagAttr[1], title)\n    }\n\n    return (\n        <div className=\"homePage\">\n            <div className=\"wrapper\">\n                <div className=\"container\">\n                <h2>VPCの設定</h2>\n                    <FormControl stateKey=\"cidrBlock\" value={vpcData.cidrBlock} label=\"CIDR BLOCK:\" placeholder=\"10.0.0.0/16\" name=\"cidrBlock\" className=\"formControl\" onChange={handleChangeVpc}  />\n                    <FormControl stateKey=\"name\" value={vpcData.name} label=\"VPC NAME:\" placeholder=\"exampleVPC\" name=\"yourVpcName\" onChange={handleChangeVpc} className=\"formControl\" />\n                </div>\n                <div className=\"container\">\n                <h2>Subnetの設定</h2>\n                    <FormControl stateKey=\"cidrBlock\" value={subnetData.cidrBlock} label=\"CIDR BLOCK:\" placeholder=\"10.0.0.0/24\" name=\"cidrBlock\" className=\"formControl\" onChange={handleChangeSubnet}  />\n                    <Select stateKey=\"availabilityZone\" label=\"AvailabilityZone:\" options={azList} value={subnetData.availabilityZone} onChange={handleChangeSubnet} />\n                    <Select stateKey=\"isPublicIp\" label=\"PublicIpOnLaunch:\" options={isPublicIp} value={subnetData.isPublicIp} onChange={handleChangeSubnet} />\n                </div>\n            </div>\n            <div className=\"buttonArea\">\n                {/* <button onClick={handleSaveData}>保存</button> */}\n                <button onClick={sendAllData}>送信</button>\n                <button onClick={consoleTestFile}>testMakeFile</button>\n                <button onClick={consoleTf}>consoleTf</button>\n                <button onClick={MakeTestFile}>MakeTestFile</button>\n                <a href=\"\" id=\"getLocal\" onClick={MakeTestFile}>ダウンロード</a>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}