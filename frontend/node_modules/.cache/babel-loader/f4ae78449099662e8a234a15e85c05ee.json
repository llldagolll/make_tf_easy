{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\features\\\\vpc\\\\VpcName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { saveVpcName } from './vpcSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VpcNameForm = props => {\n  _s();\n\n  const vpcName = useAppSelector(state => state.vpcName.value);\n  const dispatch = useAppDispatch();\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc');\n  const setVpcName = useAppSelector(state => state.vpcName.value); // const handleChange = (e:any) => {\n  //   dispatch(saveVpcName(yourVpcName))\n  //   console.log(setVpcName)\n  //   e.preventDefault()\n  // }\n\n  function handleChange() {\n    return new Promise(resolve => {\n      setTimeout(function () {\n        resolve(\"set your vpc Name\");\n        dispatch(saveVpcName(yourVpcName));\n      }, 2000);\n    });\n  }\n\n  async function asyncHandleChange(e) {\n    await handleChange(e);\n    console.log(setVpcName);\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"VPC NAME:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"exampleVPC\",\n      name: \"yourVpcName\",\n      onChange: e => setYourVpcName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: asyncHandleChange,\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VpcNameForm, \"kdRtpr87hatGgTn/qYdhJ8JuDuo=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = VpcNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VpcNameForm\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/features/vpc/VpcName.tsx"],"names":["React","useState","useAppSelector","useAppDispatch","saveVpcName","VpcNameForm","props","vpcName","state","value","dispatch","yourVpcName","setYourVpcName","setVpcName","handleChange","Promise","resolve","setTimeout","asyncHandleChange","e","console","log","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAkC,OAAlC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,OAAO,MAAMC,WAAe,GAAIC,KAAD,IAAW;AAAA;;AAExC,QAAMC,OAAO,GAAGL,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAA9B;AACA,QAAMC,QAAqB,GAAGP,cAAc,EAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,YAAD,CAA9C;AAEA,QAAMY,UAAU,GAAGX,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAAjC,CANwC,CAQxC;AACA;AACA;AACA;AACA;;AAEA,WAASK,YAAT,GAAwB;AACtB,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,MAAAA,UAAU,CAAC,YAAW;AACpBD,QAAAA,OAAO,CAAC,mBAAD,CAAP;AACAN,QAAAA,QAAQ,CAACN,WAAW,CAACO,WAAD,CAAZ,CAAR;AACD,OAHS,EAGP,IAHO,CAAV;AAID,KALM,CAAP;AAMD;;AAED,iBAAeO,iBAAf,CAAiCC,CAAjC,EAAyC;AACvC,UAAML,YAAY,CAACK,CAAD,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACAM,IAAAA,CAAC,CAACG,cAAF;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,QAAQ,EAAGH,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACI,MAAF,CAASd,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AACE,MAAA,OAAO,EAAES,iBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC,CA9CI;;GAAMb,W;UAEKH,c,EACcC,c,EAGXD,c;;;KANRG,W","sourcesContent":["import React, {useState, FC} from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { AppDispatch, store } from '../../app/store';\r\nimport { saveVpcName } from './vpcSlice';\r\n\r\nexport const VpcNameForm: FC = (props) => {\r\n\r\n  const vpcName = useAppSelector((state) => state.vpcName.value)\r\n  const dispatch: AppDispatch = useAppDispatch()\r\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc')\r\n  \r\n  const setVpcName = useAppSelector((state) => state.vpcName.value)\r\n\r\n  // const handleChange = (e:any) => {\r\n  //   dispatch(saveVpcName(yourVpcName))\r\n  //   console.log(setVpcName)\r\n  //   e.preventDefault()\r\n  // }\r\n\r\n  function handleChange() {\r\n    return new Promise(resolve => {\r\n      setTimeout(function() {\r\n        resolve(\"set your vpc Name\")\r\n        dispatch(saveVpcName(yourVpcName))\r\n      }, 2000)\r\n    })\r\n  }\r\n\r\n  async function asyncHandleChange(e: any) {\r\n    await handleChange(e)\r\n    console.log(setVpcName)\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        VPC NAME:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='exampleVPC'\r\n        name=\"yourVpcName\"\r\n        onChange={(e) => setYourVpcName(e.target.value)}\r\n      />\r\n      <button\r\n        onClick={asyncHandleChange}>\r\n        設定\r\n        </button>\r\n    </form>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}