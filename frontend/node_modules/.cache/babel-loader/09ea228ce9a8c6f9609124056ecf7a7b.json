{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\features\\\\vpc\\\\VpcName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { saveVpcName } from './vpcSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VpcNameForm = props => {\n  _s();\n\n  // const vpcName = useAppSelector((state) => state.vpcName.value)\n  const dispatch = useAppDispatch();\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc');\n  const setVpcName = useAppSelector(state => state.vpcName.value);\n\n  const handleChange = e => {\n    dispatch(saveVpcName(yourVpcName));\n    console.log(setVpcName);\n    e.preventDefault();\n  };\n\n  function setItemToLocalStorage(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  function handleSubmit(e) {\n    const key = 'vpcName';\n    const value = yourVpcName;\n    setItemToLocalStorage(key, value);\n    console.log(localStorage.getItem(key));\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"VPC NAME:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"exampleVPC\",\n      name: \"yourVpcName\",\n      onChange: e => setYourVpcName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VpcNameForm, \"Ez5YInQnVcJ9TZ5/rrAF9UkwBsg=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = VpcNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VpcNameForm\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/features/vpc/VpcName.tsx"],"names":["React","useState","useAppSelector","useAppDispatch","saveVpcName","VpcNameForm","props","dispatch","yourVpcName","setYourVpcName","setVpcName","state","vpcName","value","handleChange","e","console","log","preventDefault","setItemToLocalStorage","key","localStorage","setItem","handleSubmit","getItem","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAkC,OAAlC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AAEA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,OAAO,MAAMC,WAAe,GAAIC,KAAD,IAAW;AAAA;;AAExC;AACA,QAAMC,QAAqB,GAAGJ,cAAc,EAA5C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,YAAD,CAA9C;AAEA,QAAMS,UAAU,GAAGR,cAAc,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,KAA1B,CAAjC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAW;AAC9BR,IAAAA,QAAQ,CAACH,WAAW,CAACI,WAAD,CAAZ,CAAR;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAK,IAAAA,CAAC,CAACG,cAAF;AACD,GAJD;;AAOA,WAASC,qBAAT,CAA+BC,GAA/B,EAA4CP,KAA5C,EAAiE;AAC/DQ,IAAAA,YAAY,CAACC,OAAb,CAAqBF,GAArB,EAA0BP,KAA1B;AACD;;AAED,WAASU,YAAT,CAAsBR,CAAtB,EAA8B;AAC5B,UAAMK,GAAG,GAAG,SAAZ;AACA,UAAMP,KAAK,GAAGL,WAAd;AACAW,IAAAA,qBAAqB,CAACC,GAAD,EAAMP,KAAN,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYI,YAAY,CAACG,OAAb,CAAqBJ,GAArB,CAAZ;AACAL,IAAAA,CAAC,CAACG,cAAF;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,QAAQ,EAAGH,CAAD,IAAON,cAAc,CAACM,CAAC,CAACU,MAAF,CAASZ,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AACE,MAAA,OAAO,EAAEU,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAiBC,CA5CI;;GAAMlB,W;UAGmBF,c,EAGXD,c;;;KANRG,W","sourcesContent":["import React, {useState, FC} from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { AppDispatch, store } from '../../app/store';\r\nimport { saveVpcName } from './vpcSlice';\r\n\r\nexport const VpcNameForm: FC = (props) => {\r\n\r\n  // const vpcName = useAppSelector((state) => state.vpcName.value)\r\n  const dispatch: AppDispatch = useAppDispatch()\r\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc')\r\n  \r\n  const setVpcName = useAppSelector((state) => state.vpcName.value)\r\n\r\n  const handleChange = (e:any) => {\r\n    dispatch(saveVpcName(yourVpcName))\r\n    console.log(setVpcName)\r\n    e.preventDefault()\r\n  }\r\n\r\n\r\n  function setItemToLocalStorage(key: string, value: string): void {\r\n    localStorage.setItem(key, value)\r\n  }\r\n\r\n  function handleSubmit(e: any) {\r\n    const key = 'vpcName'\r\n    const value = yourVpcName\r\n    setItemToLocalStorage(key, value)\r\n    console.log(localStorage.getItem(key))\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        VPC NAME:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='exampleVPC'\r\n        name=\"yourVpcName\"\r\n        onChange={(e) => setYourVpcName(e.target.value)}\r\n      />\r\n      <button\r\n        onClick={handleSubmit}>\r\n        設定\r\n        </button>\r\n    </>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}