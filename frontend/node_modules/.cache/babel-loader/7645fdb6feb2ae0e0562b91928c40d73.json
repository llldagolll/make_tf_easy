{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\prog\\\\make_tf_easy\\\\src\\\\features\\\\vpc\\\\VpcName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { saveVpcName } from './vpcSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VpcNameForm = props => {\n  _s();\n\n  const vpcName = useAppSelector(state => state.vpcName.value);\n  const dispatch = useAppDispatch();\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc');\n  const setVpcName = useAppSelector(state => state.vpcName.value);\n\n  const handleChange = e => {\n    dispatch(saveVpcName(yourVpcName));\n    console.log(setVpcName);\n    e.preventDefault();\n  }; // function setYourVpcNameToStore(e:any) {\n  //   e.preventDefault()\n  //   return new Promise(resolve => {\n  //     setTimeout(function() {\n  //       dispatch(saveVpcName(yourVpcName))\n  //       resolve(\"set your vpc name to store\");\n  //     }, 2000)\n  //   })\n  // }\n  // async function asyncHandleChange(e: any) {\n  //   await setYourVpcNameToStore(e)\n  //   console.log(setVpcName)\n  //   e.preventDefault()\n  // }\n  // function setYourVpcNameToStore(e:any) {\n  //   dispatch(saveVpcName(yourVpcName))\n  //   e.preventDefault()\n  // }\n\n\n  async function setYourVpcNameToStore() {\n    return new Promise(resolve => {\n      dispatch(saveVpcName(yourVpcName));\n      resolve(\"set your vpc name to store\");\n    });\n  }\n\n  async function consoleLogStore() {\n    return new Promise(resolve => {\n      resolve(\"set your vpc name\");\n      console.log(setVpcName);\n    });\n  }\n\n  async function handleSubmit(e) {\n    await setYourVpcNameToStore();\n    await consoleLogStore();\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"VPC NAME:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"exampleVPC\",\n      name: \"yourVpcName\",\n      onChange: e => setYourVpcName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VpcNameForm, \"kdRtpr87hatGgTn/qYdhJ8JuDuo=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = VpcNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VpcNameForm\");","map":{"version":3,"sources":["C:/Users/owner/prog/make_tf_easy/src/features/vpc/VpcName.tsx"],"names":["React","useState","useAppSelector","useAppDispatch","saveVpcName","VpcNameForm","props","vpcName","state","value","dispatch","yourVpcName","setYourVpcName","setVpcName","handleChange","e","console","log","preventDefault","setYourVpcNameToStore","Promise","resolve","consoleLogStore","handleSubmit","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAkC,OAAlC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AAEA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,OAAO,MAAMC,WAAe,GAAIC,KAAD,IAAW;AAAA;;AAExC,QAAMC,OAAO,GAAGL,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAA9B;AACA,QAAMC,QAAqB,GAAGP,cAAc,EAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,YAAD,CAA9C;AAEA,QAAMY,UAAU,GAAGX,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,KAA1B,CAAjC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAW;AAC9BL,IAAAA,QAAQ,CAACN,WAAW,CAACO,WAAD,CAAZ,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAE,IAAAA,CAAC,CAACG,cAAF;AACD,GAJD,CARwC,CAcxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;AAEA,iBAAeC,qBAAf,GAAuC;AACrC,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BX,MAAAA,QAAQ,CAACN,WAAW,CAACO,WAAD,CAAZ,CAAR;AACAU,MAAAA,OAAO,CAAC,4BAAD,CAAP;AACD,KAHM,CAAP;AAID;;AAGD,iBAAeC,eAAf,GAAiC;AAC/B,WAAO,IAAIF,OAAJ,CAAYC,OAAO,IAAI;AAC1BA,MAAAA,OAAO,CAAC,mBAAD,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,KAHI,CAAP;AAIC;;AAEH,iBAAeU,YAAf,CAA4BR,CAA5B,EAAoC;AAClC,UAAMI,qBAAqB,EAA3B;AACA,UAAMG,eAAe,EAArB;AACAP,IAAAA,CAAC,CAACG,cAAF;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,QAAQ,EAAGH,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACS,MAAF,CAASf,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AACE,MAAA,OAAO,EAAEc,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC,CA3EI;;GAAMlB,W;UAEKH,c,EACcC,c,EAGXD,c;;;KANRG,W","sourcesContent":["import React, {useState, FC} from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\r\nimport { AppDispatch, store } from '../../app/store';\r\nimport { saveVpcName } from './vpcSlice';\r\n\r\nexport const VpcNameForm: FC = (props) => {\r\n\r\n  const vpcName = useAppSelector((state) => state.vpcName.value)\r\n  const dispatch: AppDispatch = useAppDispatch()\r\n  const [yourVpcName, setYourVpcName] = useState('exampleVpc')\r\n  \r\n  const setVpcName = useAppSelector((state) => state.vpcName.value)\r\n\r\n  const handleChange = (e:any) => {\r\n    dispatch(saveVpcName(yourVpcName))\r\n    console.log(setVpcName)\r\n    e.preventDefault()\r\n  }\r\n\r\n  // function setYourVpcNameToStore(e:any) {\r\n  //   e.preventDefault()\r\n  //   return new Promise(resolve => {\r\n  //     setTimeout(function() {\r\n  //       dispatch(saveVpcName(yourVpcName))\r\n  //       resolve(\"set your vpc name to store\");\r\n  //     }, 2000)\r\n  //   })\r\n  // }\r\n\r\n  // async function asyncHandleChange(e: any) {\r\n  //   await setYourVpcNameToStore(e)\r\n  //   console.log(setVpcName)\r\n  //   e.preventDefault()\r\n  // }\r\n\r\n\r\n  \r\n  // function setYourVpcNameToStore(e:any) {\r\n  //   dispatch(saveVpcName(yourVpcName))\r\n  //   e.preventDefault()\r\n  // }\r\n  \r\n  async function setYourVpcNameToStore() {\r\n    return new Promise(resolve => {\r\n      dispatch(saveVpcName(yourVpcName))\r\n      resolve(\"set your vpc name to store\")\r\n    })\r\n  }\r\n\r\n\r\n  async function consoleLogStore() {\r\n    return new Promise(resolve => {\r\n        resolve(\"set your vpc name\")\r\n        console.log(setVpcName)\r\n      })\r\n    }\r\n\r\n  async function handleSubmit(e: any) {\r\n    await setYourVpcNameToStore()\r\n    await consoleLogStore()\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        VPC NAME:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='exampleVPC'\r\n        name=\"yourVpcName\"\r\n        onChange={(e) => setYourVpcName(e.target.value)}\r\n      />\r\n      <button\r\n        onClick={handleSubmit}>\r\n        設定\r\n        </button>\r\n    </form>\r\n  );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}