{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { delegate } from '../vendor/dom-utils';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\nvar logger = new Logger('EventTracker');\nvar defaultOpts = {\n  enable: false,\n  events: ['click'],\n  selectorPrefix: 'data-amplify-analytics-',\n  provider: 'AWSPinpoint'\n};\n\nvar EventTracker =\n/** @class */\nfunction () {\n  function EventTracker(tracker, opts) {\n    if (!JS.browserOrNode().isBrowser || !window.addEventListener) {\n      logger.debug('not in the supported web environment');\n      return;\n    }\n\n    this._config = Object.assign({}, defaultOpts, opts);\n    this._tracker = tracker;\n    this._delegates = {};\n    this._trackFunc = this._trackFunc.bind(this);\n    logger.debug('initialize pageview tracker with opts', this._config);\n    this.configure(this._config);\n  }\n\n  EventTracker.prototype.configure = function (opts) {\n    var _this = this;\n\n    Object.assign(this._config, opts);\n\n    if (!this._config.enable) {\n      Object.keys(this._delegates).forEach(function (key) {\n        if (typeof _this._delegates[key].destroy === 'function') _this._delegates[key].destroy();\n      });\n      this._delegates = {};\n    } else if (this._config.enable && Object.keys(this._delegates).length === 0) {\n      var selector_1 = '[' + this._config.selectorPrefix + 'on]';\n\n      this._config.events.forEach(function (evt) {\n        _this._delegates[evt] = delegate(document, evt, selector_1, _this._trackFunc, {\n          composed: true,\n          useCapture: true\n        });\n      });\n    }\n\n    return this._config;\n  };\n\n  EventTracker.prototype._trackFunc = function (event, element) {\n    return __awaiter(this, void 0, void 0, function () {\n      var customAttrs, events, eventName, attrs, defaultAttrs, _a, attributes;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            customAttrs = {};\n            events = element.getAttribute(this._config.selectorPrefix + 'on').split(/\\s*,\\s*/);\n            eventName = element.getAttribute(this._config.selectorPrefix + 'name');\n            attrs = element.getAttribute(this._config.selectorPrefix + 'attrs');\n\n            if (attrs) {\n              attrs.split(/\\s*,\\s*/).forEach(function (attr) {\n                var tmp = attr.trim().split(/\\s*:\\s*/);\n                customAttrs[tmp[0]] = tmp[1];\n              });\n            }\n\n            if (!(typeof this._config.attributes === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._config.attributes()];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = this._config.attributes;\n            _b.label = 3;\n\n          case 3:\n            defaultAttrs = _a;\n            attributes = Object.assign({\n              type: event.type,\n              target: event.target.localName + \" with id \" + event.target.id\n            }, defaultAttrs, customAttrs);\n            logger.debug('events needed to be recorded', events);\n            logger.debug('attributes needed to be attached', customAttrs);\n\n            if (events.indexOf(event.type) < 0) {\n              logger.debug(\"event \" + event.type + \" is not selected to be recorded\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            this._tracker({\n              name: eventName || 'event',\n              attributes: attributes\n            }, this._config.provider).catch(function (e) {\n              logger.debug(\"Failed to record the \" + event.type + \" event', \" + e);\n            });\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return EventTracker;\n}();\n\nexport { EventTracker };\n/**\n * @deprecated use named import\n */\n\nexport default EventTracker;","map":{"version":3,"sources":["C:\\Users\\owner\\prog\\make_tf_easy\\frontend\\node_modules\\@aws-amplify\\analytics\\src\\trackers\\EventTracker.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { delegate } from '../vendor/dom-utils';\nimport { EventTrackOpts } from '../types';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\n\nconst logger = new Logger('EventTracker');\n\nconst defaultOpts: EventTrackOpts = {\n\tenable: false,\n\tevents: ['click'],\n\tselectorPrefix: 'data-amplify-analytics-',\n\tprovider: 'AWSPinpoint',\n};\n\nexport class EventTracker {\n\tprivate _tracker;\n\tprivate _config: EventTrackOpts;\n\tprivate _delegates;\n\n\tconstructor(tracker, opts) {\n\t\tif (!JS.browserOrNode().isBrowser || !window.addEventListener) {\n\t\t\tlogger.debug('not in the supported web environment');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._config = Object.assign({}, defaultOpts, opts);\n\t\tthis._tracker = tracker;\n\t\tthis._delegates = {};\n\t\tthis._trackFunc = this._trackFunc.bind(this);\n\n\t\tlogger.debug('initialize pageview tracker with opts', this._config);\n\n\t\tthis.configure(this._config);\n\t}\n\n\tconfigure(opts?: EventTrackOpts) {\n\t\tObject.assign(this._config, opts);\n\n\t\tif (!this._config.enable) {\n\t\t\tObject.keys(this._delegates).forEach(key => {\n\t\t\t\tif (typeof this._delegates[key].destroy === 'function')\n\t\t\t\t\tthis._delegates[key].destroy();\n\t\t\t});\n\t\t\tthis._delegates = {};\n\t\t} else if (\n\t\t\tthis._config.enable &&\n\t\t\tObject.keys(this._delegates).length === 0\n\t\t) {\n\t\t\tconst selector = '[' + this._config.selectorPrefix + 'on]';\n\t\t\tthis._config.events.forEach(evt => {\n\t\t\t\tthis._delegates[evt] = delegate(\n\t\t\t\t\tdocument,\n\t\t\t\t\tevt,\n\t\t\t\t\tselector,\n\t\t\t\t\tthis._trackFunc,\n\t\t\t\t\t{ composed: true, useCapture: true }\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tprivate async _trackFunc(event, element) {\n\t\t// the events specifed in 'amplify-analytics-on' selector\n\t\tconst customAttrs = {};\n\t\tconst events = element\n\t\t\t.getAttribute(this._config.selectorPrefix + 'on')\n\t\t\t.split(/\\s*,\\s*/);\n\t\tconst eventName = element.getAttribute(\n\t\t\tthis._config.selectorPrefix + 'name'\n\t\t);\n\n\t\tconst attrs = element.getAttribute(this._config.selectorPrefix + 'attrs');\n\t\tif (attrs) {\n\t\t\tattrs.split(/\\s*,\\s*/).forEach(attr => {\n\t\t\t\tconst tmp = attr.trim().split(/\\s*:\\s*/);\n\t\t\t\tcustomAttrs[tmp[0]] = tmp[1];\n\t\t\t});\n\t\t}\n\n\t\tconst defaultAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\n\t\tconst attributes = Object.assign(\n\t\t\t{\n\t\t\t\ttype: event.type,\n\t\t\t\ttarget: `${event.target.localName} with id ${event.target.id}`,\n\t\t\t},\n\t\t\tdefaultAttrs,\n\t\t\tcustomAttrs\n\t\t);\n\n\t\tlogger.debug('events needed to be recorded', events);\n\t\tlogger.debug('attributes needed to be attached', customAttrs);\n\t\tif (events.indexOf(event.type) < 0) {\n\t\t\tlogger.debug(`event ${event.type} is not selected to be recorded`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tracker(\n\t\t\t{\n\t\t\t\tname: eventName || 'event',\n\t\t\t\tattributes,\n\t\t\t},\n\t\t\tthis._config.provider\n\t\t).catch(e => {\n\t\t\tlogger.debug(`Failed to record the ${event.type} event', ${e}`);\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default EventTracker;\n"]},"metadata":{},"sourceType":"module"}